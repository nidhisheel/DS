import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Arrays;

import java.util.StringTokenizer;


public class WordRank {
	static int count = 0;
	static int j = 0;
   static PrintWriter out = new PrintWriter(System.out);
	public static String findAnagramAtLocation(String prefix, String str) {
		int n = str.length();
		if (n == 0) {
			if (!prefix.isEmpty() && prefix.length() != 0) {
				count++;

				if (count == j) {
				 out.println(prefix);

					return prefix;

				}

			}

		} else {
			for (int i = 0; i < n; i++) {
				findAnagramAtLocation(prefix + str.charAt(i),
						str.substring(0, i) + str.substring(i + 1, n));
				if (count == j)
					break;
			}
		}
		return str;

	}

	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		FastScanner sc = new FastScanner(br);
		int N = sc.nextInt();
		for (int i = 0; i < N; i++) {
			count = 0;
			String str = sc.next();
			j = sc.nextInt();
			char x[] = str.toCharArray();
			Arrays.sort(x);
			String str1 = new String(x);

			// System.out.print("--"+str1);
			String output = findAnagramAtLocation(" ", str1);
			// System.out.println(output);

		}
	}

}
class FastScanner {
	BufferedReader in;
	StringTokenizer st;
	public FastScanner(BufferedReader in)
	{
		this.in=in;
	}
	public String nextToken() throws Exception
	{
		while(st==null ||!st.hasMoreTokens())
		{
			st=new StringTokenizer(in.readLine());
		}
		return st.nextToken();
	}
	public String next() throws Exception
	{
		return nextToken().toString();
	}
  public int nextInt() throws Exception
  {
	  return Integer.parseInt(nextToken());
  }
  public long nextLong() throws Exception
  {
	  return Long.parseLong(nextToken());
  }
  public double nextDouble() throws Exception
  {
	  return Double.parseDouble(nextToken());
  }
}
